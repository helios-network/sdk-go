syntax = "proto3";
package helios.chronos.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "helios-core/helios-chain/x/chronos/types";

// Defines when messages will be executed in the block
enum ExecutionStage {
  EXECUTION_STAGE_END_BLOCKER = 0;
  EXECUTION_STAGE_BEGIN_BLOCKER = 1;
}

// Cron for autonomous EVM smart-contract execution
message Cron {
  uint64 id = 1;
  string address = 2; // Cron Wallet Address
  string owner_address = 3 [(gogoproto.jsontag) = "ownerAddress"]; // Owner wallet address
  string contract_address = 4 [(gogoproto.jsontag) = "contractAddress"]; // EVM smart contract address
  string abi_json = 5 [(gogoproto.jsontag) = "abiJson"]; // Contract ABI JSON
  string method_name = 6 [(gogoproto.jsontag) = "methodName"]; // Method to execute
  repeated string params = 7; // Method parameters serialized as strings
  uint64 frequency = 8; // Execution frequency in blocks
  uint64 next_execution_block = 9 [(gogoproto.jsontag) = "nextExecutionBlock"]; // Next execution block height
  uint64 expiration_block = 10 [(gogoproto.jsontag) = "expirationBlock"]; // Expiration block height (0 if never expires)
  ExecutionStage execution_stage = 11 [(gogoproto.jsontag) = "executionStage"];
  uint64 gas_limit = 12 [(gogoproto.jsontag) = "gasLimit"]; // maximum gas limit accepted
  string max_gas_price = 13 [(gogoproto.jsontag) = "maxGasPrice", (cosmos_proto.scalar) = "cosmos.Int", (gogoproto.customtype) = "cosmossdk.io/math.Int"]; // maximum gas price accepted
  uint64 total_executed_transactions = 14 [(gogoproto.jsontag) = "totalExecutedTransactions"];
  string total_fees_paid = 15 [(gogoproto.jsontag) = "totalFeesPaid", (cosmos_proto.scalar) = "cosmos.Int", (gogoproto.customtype) = "cosmossdk.io/math.Int"];
  string cron_type = 16 [(gogoproto.jsontag) = "cronType"];
  bool archived = 17; // Is archived cron
  int64 queue_timestamp = 18 [(gogoproto.jsontag) = "queueTimestamp"];
}